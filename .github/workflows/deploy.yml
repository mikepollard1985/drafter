name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: PRODUCTION
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USER }}/drafter:latest

      - name: Prepare SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: SSH & Deploy via Docker Compose
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ vars.SERVER_HOST }} << 'EOF'
            set -e
            cd ${{ vars.DEPLOY_PATH }}

            # Authenticate on server-side for pulling the private image
            echo "${{ secrets.DOCKER_PAT }}" \
              | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin

            # Pull & restart only the api service defined in compose.yml
            docker compose pull api
            docker compose down --volumes
            docker compose up -d --build --force-recreate api

            # Optional cleanup of old images
            docker image prune -f
          EOF

